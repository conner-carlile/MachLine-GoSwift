module vtk

    use geometry

    implicit none
    
contains

    subroutine load_vtk(mesh_file, N_vert, N_panel, vertices, panels)

        implicit none

        character(len=:),allocatable,intent(in) :: mesh_file
        integer,intent(out) :: N_vert, N_panel
        character(len=:),allocatable :: dummy_read
        real,dimension(:,:),allocatable,intent(out) :: vertices
        type(panel),dimension(:),allocatable,intent(out) :: panels
        integer :: i, N, i1, i2, i3

        ! Open file
        open(1, file=mesh_file)

            ! Determine number of vertices
            read(1,*) ! Header
            read(1,*) ! Header
            read(1,*) ! Header
            read(1,*) ! Header
            read(1,*) dummy_read, N_vert, dummy_read

            ! Allocate vertex array
            allocate(vertices(N_vert,3))

            ! Store vertices
            do i=1,N_vert
                read(1,*) vertices(i,1), vertices(i,2), vertices(i,3)
            end do

            ! Determine number of panels
            read(1,*) dummy_read, N_panel, dummy_read

            ! Allocate panel array
            allocate(panels(N_panel))

            ! Initialize panels
            do i=1,N_panel
                read(1,*) N, i1, i2, i3
                panels(i) = panel(N, i1, i2, i3, vertices(i1,:), vertices(i2,:), vertices(i3,:))
            end do

        close(1)
    
    end subroutine load_vtk


    subroutine write_surface_vtk(filename, vertices, panels)

        implicit none

        character(len=:),allocatable,intent(in) :: filename
        real,dimension(:,:),allocatable,intent(in) :: vertices
        type(panel),dimension(:),allocatable,intent(in) :: panels
        integer :: i, N_vert, N_panel, panel_info_size

        ! Formats for writing out results
        100 format(e20.12, ' ', e20.12, ' ', e20.12) ! Vertices
        101 format(i20, ' ', i20, ' ', i20) ! Panel indices

        ! Open file
        open(1, file=filename)

            ! Write header
            write(1,*) "# vtk DataFile Version 3.0"
            write(1,*) "MFTran results file. Generated by MFTran, USU AeroLab (c) 2021."
            write(1,*) "ASCII"

            ! Write out vertices
            N_vert = size(vertices)/3
            write(1,*) "DATASET POLYDATA"
            write(1,*) "POINTS", N_vert, "float"
            do i=1,N_vert
                write(1,100) vertices(i,1), vertices(i,2), vertices(i,3)
            end do

            ! Determine panel info size
            panel_info_size = 0
            N_panel = size(panels)
            do i=1,N_panel
                panel_info_size = panel_info_size + panels(i)%N + 1
            end do
            
            ! Write out panels
            write(1,*) "POLYGONS", N_panel, panel_info_size
            do i=1,N_panel
                write(1,101) panels(i)%i1, panels(i)%i2, panels(i)%i3
            end do

        close(1)
        
    
    end subroutine write_surface_vtk

    
end module vtk